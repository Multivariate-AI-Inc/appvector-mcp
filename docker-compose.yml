services:
  appvector-mcp:
    build: .
    # Internal network access only - no external ports
    environment:
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import httpx; httpx.get('http://localhost:3000/mcp')"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5s

  gamma-mcp:
    build: 
      context: ../gamma-mcp
      dockerfile: Dockerfile
    # Internal network access only - no external ports
    environment:
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import httpx; httpx.get('http://localhost:8000/mcp')"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5s

  semrush-mcp:
    build: 
      context: ../semrush-mcp
      dockerfile: Dockerfile
    # Internal network access only - no external ports
    environment:
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import httpx; httpx.get('http://localhost:3001/mcp')"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5s

  mattermost-mcp:
    build: 
      context: ../mattermost-mcp
      dockerfile: Dockerfile
    # Internal network access only - no external ports
    environment:
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import httpx; httpx.get('http://localhost:3002/mcp')"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5s

  superset-mcp:
    build: 
      context: ../superset-mcp
      dockerfile: Dockerfile
    # Internal network access only - no external ports
    environment:
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import httpx; httpx.get('http://localhost:8001/health')"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5s

  caddy:
    image: caddy:2-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    restart: unless-stopped
    depends_on:
      - appvector-mcp
      - gamma-mcp
      - semrush-mcp
      - mattermost-mcp
      - superset-mcp

volumes:
  caddy_data:
  caddy_config: